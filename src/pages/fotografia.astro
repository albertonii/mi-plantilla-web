---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { supabase } from '../../supabase/config';

// Cargar datos reales de Supabase
let photographyData = [];
let allTags = [];

try {
  // Obtener todas las fotos sin filtro primero
  const { data: allData, error: allError } = await supabase
    .from('photography')
    .select('*');
    
  // Hacer la consulta con filtro
  const { data, error } = await supabase
    .from('photography')
    .select('*')
    .eq('status', 'available')
    .order('created_at', { ascending: false });

  if (error) {
    console.error('Error al cargar fotograf√≠as:', error);
  } else {
    photographyData = data || [];
    
    // Si no hay fotos con status 'available', usar todas las fotos
    if (photographyData.length === 0 && allData && allData.length > 0) {
      photographyData = allData;
    }
    
    // Obtener todas las etiquetas √∫nicas
    allTags = [...new Set(photographyData.flatMap(photo => photo.tags || []))];
  }
} catch (error) {
  console.error('Error inesperado:', error);
}

// Funci√≥n para truncar texto
function truncateText(text, maxLength = 100) {
  if (!text) return '';
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength).trim() + '...';
}
---

<BaseLayout title="Fotograf√≠a - Portfolio Personal">
  <Navigation />
  
  <!-- Hero Section -->
  <section class="pt-20 pb-16 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
      <div class="text-center">
        <h1 class="text-4xl sm:text-5xl font-space-grotesk font-bold text-gray-100 mb-6">
          Galer√≠a de <span class="text-primary-400">Fotograf√≠a</span>
        </h1>
        <p class="text-xl text-gray-400 max-w-3xl mx-auto mb-8">
          Capturando momentos √∫nicos y creando arte visual a trav√©s del lente. 
          Cada imagen cuenta una historia diferente.
        </p>
      </div>
    </div>
  </section>

  <!-- Filters Section -->
  <section class="pb-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
      <div class="flex flex-wrap gap-4 justify-center">
        <button
          class="filter-btn active px-4 py-2 rounded-lg text-sm font-medium transition-colors"
          data-filter="all"
        >
          Todas
        </button>
        {allTags.length > 0 && allTags.map((tag) => (
          <button
            class="filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-colors"
            data-filter={tag}
          >
            {tag}
          </button>
        ))}
      </div>
    </div>
  </section>

  <!-- Gallery Section -->
  <section class="pb-16 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
      <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4" id="gallery">
        {photographyData.map((photo) => (
          <div 
            class="photo-card group cursor-pointer"
            data-tags={(photo.tags || []).join(' ')}
            data-photo-id={photo.id}
          >
            <div class="aspect-square relative overflow-hidden rounded-lg max-w-xs">
              {photo.image_url ? (
                <img 
                  src={photo.image_url} 
                  alt={photo.title}
                  class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                  loading="lazy"
                  onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                />
              ) : null}
              <div class="w-full h-full bg-dark-700 flex items-center justify-center" style={photo.image_url ? 'display: none;' : ''}>
                <span class="text-4xl">üì∑</span>
              </div>
              
              {/* Precio sutil en esquina derecha */}
              {photo.status === 'available' && photo.price && (
                <div class="absolute top-2 right-2 bg-black/50 backdrop-blur-sm text-white px-1 py-0.5 rounded text-xs font-medium">
                  ${photo.price}
                </div>
              )}
              
              {/* Overlay con t√≠tulo y descripci√≥n en hover */}
              <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col items-center justify-center p-4">
                <h3 class="text-white text-sm font-semibold text-center mb-2">
                  {photo.title}
                </h3>
                {photo.description && (
                  <p class="text-white text-xs text-center leading-relaxed">
                    {truncateText(photo.description, 80)}
                  </p>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Modal para vista detallada -->
  <div id="photo-modal" class="fixed inset-0 bg-black/80 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-dark-800 rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6">
          <div class="flex justify-between items-start mb-6">
            <h2 id="modal-title" class="text-2xl font-bold text-gray-100"></h2>
            <button id="close-modal" class="text-gray-400 hover:text-white text-2xl">
              √ó
            </button>
          </div>
          
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <div class="space-y-4">
              <div class="aspect-square relative overflow-hidden rounded-lg">
                <img id="modal-image" class="w-full h-full object-cover" />
              </div>
              <div class="flex justify-center">
                <button id="view-large" class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors">
                  Ver en Grande
                </button>
              </div>
            </div>
            
            <div class="space-y-4">
              <div>
                <h3 class="text-lg font-semibold text-gray-100 mb-2">Descripci√≥n</h3>
                <p id="modal-description" class="text-gray-400"></p>
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <h4 class="text-sm font-medium text-gray-300 mb-1">Precio</h4>
                  <p id="modal-price" class="text-primary-400 font-semibold"></p>
                </div>
                <div>
                  <h4 class="text-sm font-medium text-gray-300 mb-1">Ubicaci√≥n</h4>
                  <p id="modal-location" class="text-gray-400"></p>
                </div>
                <div>
                  <h4 class="text-sm font-medium text-gray-300 mb-1">Fecha</h4>
                  <p id="modal-date" class="text-gray-400"></p>
                </div>
                <div>
                  <h4 class="text-sm font-medium text-gray-300 mb-1">Estado</h4>
                  <p id="modal-status" class="text-gray-400"></p>
                </div>
              </div>
              
              <div>
                <h4 class="text-sm font-medium text-gray-300 mb-2">Etiquetas</h4>
                <div id="modal-tags" class="flex flex-wrap gap-2"></div>
              </div>
              
              <div id="modal-buy-button" class="hidden">
                <button class="w-full px-4 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors">
                  Interesado en Comprar
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal para vista grande de imagen -->
  <div id="large-image-modal" class="fixed inset-0 bg-black/95 z-50 hidden flex items-center justify-center">
    <div class="relative max-w-7xl w-full h-full flex items-center justify-center p-4">
      <!-- Bot√≥n de cerrar -->
      <button id="close-large-modal" class="absolute top-4 right-4 text-white text-3xl hover:text-gray-300 z-10 bg-black/50 rounded-full w-12 h-12 flex items-center justify-center backdrop-blur-sm transition-all duration-200">
        √ó
      </button>
      
      <!-- Bot√≥n de navegaci√≥n izquierda -->
      <button id="nav-prev" class="absolute left-4 top-1/2 transform -translate-y-1/2 text-white text-2xl hover:text-gray-300 z-10 bg-black/50 rounded-full w-12 h-12 flex items-center justify-center backdrop-blur-sm transition-all duration-200 opacity-0 group-hover:opacity-100">
        ‚Äπ
      </button>
      
      <!-- Bot√≥n de navegaci√≥n derecha -->
      <button id="nav-next" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white text-2xl hover:text-gray-300 z-10 bg-black/50 rounded-full w-12 h-12 flex items-center justify-center backdrop-blur-sm transition-all duration-200 opacity-0 group-hover:opacity-100">
        ‚Ä∫
      </button>
      
      <!-- Bot√≥n para mostrar/ocultar informaci√≥n -->
      <button id="toggle-info" class="absolute top-4 left-4 text-white text-lg hover:text-gray-300 z-10 bg-black/50 rounded-full w-10 h-10 flex items-center justify-center backdrop-blur-sm transition-all duration-200">
        ‚Ñπ
      </button>
      
      <!-- Contenedor de imagen con informaci√≥n en el pie -->
      <div class="relative w-full h-full flex flex-col items-center justify-center">
        <!-- Imagen principal -->
        <img id="large-image" class="w-full h-auto max-h-[80vh] object-contain rounded-lg shadow-2xl transition-all duration-300 transform scale-95 opacity-0" />
        
        <!-- Informaci√≥n en el pie de la imagen -->
        <div id="large-image-info" class="absolute bottom-0 left-0 right-0 bg-black/80 backdrop-blur-sm rounded-t-lg p-4 text-white transform translate-y-full transition-transform duration-300">
          <div class="flex justify-between items-start mb-2">
            <h3 id="large-image-title" class="text-lg font-semibold"></h3>
            <button id="close-info" class="text-gray-400 hover:text-white text-xl">
              √ó
            </button>
          </div>
          <p id="large-image-description" class="text-sm text-gray-300 mb-3"></p>
          <div class="flex items-center justify-between text-xs text-gray-400">
            <span id="large-image-price"></span>
            <span id="large-image-location"></span>
            <span id="large-image-date"></span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <Footer />

  <style>
    .filter-btn {
      @apply bg-dark-800 text-gray-300 hover:bg-dark-700;
    }
    .filter-btn.active {
      @apply bg-primary-600 text-white;
    }
    
    /* Estilos para im√°genes m√°s peque√±as */
    .photo-card {
      @apply max-w-full;
    }
    
    .photo-card img {
      @apply object-cover;
    }
    
    /* Responsive para pantallas muy peque√±as */
    @media (max-width: 640px) {
      #gallery {
        @apply grid-cols-2 gap-3;
      }
    }
    
    /* Estilos para el modal de pantalla completa */
    #large-image-modal {
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
    }
    
    #large-image-info {
      transition: transform 0.3s ease-in-out;
    }
    
    #large-image-info.show {
      transform: translateY(0);
    }
    
    #close-large-modal, #toggle-info {
      transition: all 0.2s ease-in-out;
    }
    
    #close-large-modal:hover, #toggle-info:hover {
      transform: scale(1.1);
      background-color: rgba(0, 0, 0, 0.7);
    }
    
    /* Mejoras para la imagen en pantalla completa */
    #large-image {
      transition: all 0.3s ease-in-out;
    }
    
    #large-image:hover {
      transform: scale(1.02);
    }
    
    /* Asegurar que el modal ocupe toda la pantalla */
    #large-image-modal {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 9999;
    }
    
    /* Estilos para navegaci√≥n */
    #nav-prev, #nav-next {
      transition: all 0.2s ease-in-out;
    }
    
    #nav-prev:hover, #nav-next:hover {
      transform: scale(1.1);
      background-color: rgba(0, 0, 0, 0.7);
    }
    
    /* Mostrar botones de navegaci√≥n al hacer hover en el modal */
    #large-image-modal:hover #nav-prev,
    #large-image-modal:hover #nav-next {
      opacity: 1;
    }
    
    /* Transici√≥n de entrada para la imagen */
    #large-image.loaded {
      transform: scale(1);
      opacity: 1;
    }
    
    /* Transici√≥n de salida para el modal */
    #large-image-modal.closing {
      opacity: 0;
      transform: scale(0.95);
    }
    
    /* Animaci√≥n de entrada para el modal */
    #large-image-modal.entering {
      animation: modalEnter 0.3s ease-out;
    }
    
    @keyframes modalEnter {
      from {
        opacity: 0;
        transform: scale(0.9);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }
    
    /* Estilos para el bot√≥n de informaci√≥n */
    #toggle-info {
      font-size: 18px;
      font-weight: bold;
    }
    
    /* Estilos para el bot√≥n de cerrar informaci√≥n */
    #close-info {
      transition: all 0.2s ease-in-out;
    }
    
    #close-info:hover {
      transform: scale(1.1);
    }
    
    /* Estilos para el overlay de las tarjetas de fotos */
    .photo-card .absolute {
      backdrop-filter: blur(2px);
      -webkit-backdrop-filter: blur(2px);
    }
    
    /* Mejorar legibilidad del texto en overlay */
    .photo-card .text-white {
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
    }
  </style>

  <script src="/js/photography-gallery.js" is:inline></script>
  <script define:vars={{ photographyData }}>
    // Definir los datos de fotograf√≠a como variable global
    window.photographyData = {photographyData};
    
    // Crear una versi√≥n limpia de los datos para el JavaScript
    const cleanPhotographyData = photographyData.map(photo => ({
      id: photo.id,
      title: photo.title,
      description: photo.description,
      image_url: photo.image_url,
      price: photo.price,
      location: photo.location,
      date: photo.date,
      tags: photo.tags,
      status: photo.status
    }));
    
    // Inicializar la galer√≠a con los datos del servidor
    if (cleanPhotographyData && cleanPhotographyData.length > 0) {
      initPhotographyGallery(JSON.stringify(cleanPhotographyData));
    }
  </script>
</BaseLayout>
